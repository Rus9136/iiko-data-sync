#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–ø–∏—Å–∞–Ω–∏–π –æ—Ç –∑–∞–∫—É–ø–æ–∫'
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from web.reports.writeoffs.writeoffs_reports_controller import get_writeoffs_data_internal
from datetime import datetime, timedelta
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_writeoffs_vs_procurement_report():
    """–¢–µ—Å—Ç –æ—Ç—á–µ—Ç–∞ '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–ø–∏—Å–∞–Ω–∏–π –æ—Ç –∑–∞–∫—É–ø–æ–∫'"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–ø–∏—Å–∞–Ω–∏–π –æ—Ç –∑–∞–∫—É–ø–æ–∫' ===")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    end_date = datetime.now().date()
    start_date = end_date - timedelta(days=30)  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    
    filters = {
        'writeoffReportType': 'writeoffs_vs_procurement',
        'dateFrom': start_date,
        'dateTo': end_date,
        'store': 'all',
        'account': 'all'
    }
    
    print(f"–¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"  –ü–µ—Ä–∏–æ–¥: —Å {start_date} –ø–æ {end_date}")
    print(f"  –¢–∏–ø –æ—Ç—á–µ—Ç–∞: {filters['writeoffReportType']}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
        result = get_writeoffs_data_internal(filters)
        
        if result['success']:
            data = result['data']
            columns = result['columns']
            
            print(f"\n‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(data)}")
            print(f"üìã –ö–æ–ª–æ–Ω–∫–∏: {len(columns)}")
            
            # –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–ª–æ–Ω–æ–∫
            print(f"\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–ª–æ–Ω–æ–∫:")
            for i, col in enumerate(columns):
                print(f"  {i+1}. {col['name']} ({col['key']}) - {col['type']}")
            
            # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π
            if data:
                print(f"\nüìà –ü–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π:")
                for i, record in enumerate(data[:5]):
                    print(f"  –ó–∞–ø–∏—Å—å {i+1}:")
                    print(f"    –¢–æ–≤–∞—Ä: {record.get('product_name', 'N/A')}")
                    print(f"    –ö–æ–¥: {record.get('product_code', 'N/A')}")
                    print(f"    –ü–æ—Å—Ç—É–ø–∏–ª–æ: {record.get('procurement_amount', 0):.3f}")
                    print(f"    –ü—Ä–æ–¥–∞–Ω–æ: {record.get('sold_amount', 0):.3f}")
                    print(f"    –°–ø–∏—Å–∞–Ω–æ: {record.get('writeoff_amount', 0):.3f}")
                    print(f"    % —Å–ø–∏—Å–∞–Ω–∏–π: {record.get('writeoff_percentage', 0):.2f}%")
                    print(f"    –°—Ç–∞—Ç—É—Å: {record.get('status', 'N/A')}")
                    print()
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
                status_stats = {}
                total_procurement = 0
                total_writeoffs = 0
                
                for record in data:
                    status = record.get('status', '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
                    status_stats[status] = status_stats.get(status, 0) + 1
                    total_procurement += record.get('procurement_amount', 0)
                    total_writeoffs += record.get('writeoff_amount', 0)
                
                print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
                for status, count in status_stats.items():
                    print(f"  {status}: {count} —Ç–æ–≤–∞—Ä–æ–≤")
                
                overall_percentage = (total_writeoffs / total_procurement * 100) if total_procurement > 0 else 0
                print(f"\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
                print(f"  –û–±—â–∏–π –æ–±—ä–µ–º –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π: {total_procurement:.3f}")
                print(f"  –û–±—â–∏–π –æ–±—ä–µ–º —Å–ø–∏—Å–∞–Ω–∏–π: {total_writeoffs:.3f}")
                print(f"  –û–±—â–∏–π % —Å–ø–∏—Å–∞–Ω–∏–π: {overall_percentage:.2f}%")
            else:
                print("‚ö†Ô∏è  –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

if __name__ == "__main__":
    success = test_writeoffs_vs_procurement_report()
    
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)